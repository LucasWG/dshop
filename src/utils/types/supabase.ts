/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/_coupons": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter._coupons.id"];
          coupon?: parameters["rowFilter._coupons.coupon"];
          discount?: parameters["rowFilter._coupons.discount"];
          qty?: parameters["rowFilter._coupons.qty"];
          ends_in?: parameters["rowFilter._coupons.ends_in"];
          inserted_at?: parameters["rowFilter._coupons.inserted_at"];
          updated_at?: parameters["rowFilter._coupons.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["_coupons"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** _coupons */
          _coupons?: definitions["_coupons"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter._coupons.id"];
          coupon?: parameters["rowFilter._coupons.coupon"];
          discount?: parameters["rowFilter._coupons.discount"];
          qty?: parameters["rowFilter._coupons.qty"];
          ends_in?: parameters["rowFilter._coupons.ends_in"];
          inserted_at?: parameters["rowFilter._coupons.inserted_at"];
          updated_at?: parameters["rowFilter._coupons.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter._coupons.id"];
          coupon?: parameters["rowFilter._coupons.coupon"];
          discount?: parameters["rowFilter._coupons.discount"];
          qty?: parameters["rowFilter._coupons.qty"];
          ends_in?: parameters["rowFilter._coupons.ends_in"];
          inserted_at?: parameters["rowFilter._coupons.inserted_at"];
          updated_at?: parameters["rowFilter._coupons.updated_at"];
        };
        body: {
          /** _coupons */
          _coupons?: definitions["_coupons"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/_products": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter._products.id"];
          name?: parameters["rowFilter._products.name"];
          price?: parameters["rowFilter._products.price"];
          description?: parameters["rowFilter._products.description"];
          inserted_at?: parameters["rowFilter._products.inserted_at"];
          updated_at?: parameters["rowFilter._products.updated_at"];
          available?: parameters["rowFilter._products.available"];
          slug?: parameters["rowFilter._products.slug"];
          images?: parameters["rowFilter._products.images"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["_products"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** _products */
          _products?: definitions["_products"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter._products.id"];
          name?: parameters["rowFilter._products.name"];
          price?: parameters["rowFilter._products.price"];
          description?: parameters["rowFilter._products.description"];
          inserted_at?: parameters["rowFilter._products.inserted_at"];
          updated_at?: parameters["rowFilter._products.updated_at"];
          available?: parameters["rowFilter._products.available"];
          slug?: parameters["rowFilter._products.slug"];
          images?: parameters["rowFilter._products.images"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter._products.id"];
          name?: parameters["rowFilter._products.name"];
          price?: parameters["rowFilter._products.price"];
          description?: parameters["rowFilter._products.description"];
          inserted_at?: parameters["rowFilter._products.inserted_at"];
          updated_at?: parameters["rowFilter._products.updated_at"];
          available?: parameters["rowFilter._products.available"];
          slug?: parameters["rowFilter._products.slug"];
          images?: parameters["rowFilter._products.images"];
        };
        body: {
          /** _products */
          _products?: definitions["_products"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  /** Discount coupons */
  _coupons: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    coupon: string;
    discount: number;
    qty: number;
    ends_in: string;
    inserted_at: string;
    updated_at: string;
  };
  _products: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    name: string;
    price: number;
    description?: string;
    inserted_at: string;
    updated_at: string;
    available: number;
    slug: string;
    images: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** _coupons */
  "body._coupons": definitions["_coupons"];
  "rowFilter._coupons.id": string;
  "rowFilter._coupons.coupon": string;
  "rowFilter._coupons.discount": string;
  "rowFilter._coupons.qty": string;
  "rowFilter._coupons.ends_in": string;
  "rowFilter._coupons.inserted_at": string;
  "rowFilter._coupons.updated_at": string;
  /** _products */
  "body._products": definitions["_products"];
  "rowFilter._products.id": string;
  "rowFilter._products.name": string;
  "rowFilter._products.price": string;
  "rowFilter._products.description": string;
  "rowFilter._products.inserted_at": string;
  "rowFilter._products.updated_at": string;
  "rowFilter._products.available": string;
  "rowFilter._products.slug": string;
  "rowFilter._products.images": string;
}

export interface operations {}
